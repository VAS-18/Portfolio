@tailwind base;
@tailwind components;
@tailwind utilities;

/* its AI Generated :p*/

:root {
  /* Retro color palette */
  --color-primary: #39ff14;     /* Bright green - CRT monitor style */
  --color-secondary: #ff00ff;   /* Magenta */
  --color-accent: #00ffff;      /* Cyan */
  --color-background: #0a0a0a;  /* Dark background */
  --color-text: #39ff14;        /* Bright green text */
  
  --scanline-size: 4px;         /* Increased size for better performance */
  --scanline-intensity: 0.3;    /* Reduced for subtlety */
  --vignette-opacity: 0.4;      /* Control vignette intensity */
}

/* Removed scanline animation */

body {
  color: var(--color-text);
  background-color: var(--color-background);
  font-family: 'Press Start 2P', monospace;
  text-shadow: 0 0 5px var(--color-text);
  position: fixed;
  overflow: hidden;
  width: 100%;
  height: 100vh;
  margin: 0;
  padding: 0;
}

/* Scanline overlay */
.scanlines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('/scanlines.png');
  background-repeat: repeat;
  pointer-events: none;
  z-index: 100;
  opacity: 0.2;
  mix-blend-mode: multiply;

  animation: scanlines 4s linear infinite;
}

@keyframes scanlines {
  0% { background-position: 10%; }
  20%, 30% { background-position: 2 100%; }
}



/* Simplified vignette effect */
.vignette {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 98;
  background: radial-gradient(
    circle at center,
    transparent 30%,
    rgba(0, 0, 0, var(--vignette-opacity)) 100%
  );
}

/* Retro button styles */
.retro-button {
  background-color: var(--color-background);
  color: var(--color-primary);
  border: 2px solid var(--color-primary);
  padding: 0.5rem 1rem;
  font-family: 'Press Start 2P', monospace;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 0.3s ease;
}

.retro-button:hover {
  background-color: var(--color-primary);
  color: var(--color-background);
  box-shadow: 0 0 10px var(--color-primary);
}

/* Retro container with border effect */
.retro-container {
  border: 2px solid var(--color-primary);
  background-color: rgba(10, 10, 10, 0.8);
  padding: 1rem;
  position: relative;
  margin: 1rem 0;
}

.retro-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 1px solid var(--color-primary);
  margin: 4px;
  pointer-events: none;
}

/* Retro text effect */
.retro-text {
  color: var(--color-primary);
  text-shadow: 0 0 5px var(--color-primary);
  letter-spacing: 2px;
}

/* Optional glitch effect - only apply it to elements with .glitch class */
@keyframes glitch {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(2px, -2px); }
  60% { transform: translate(-2px, -2px); }
  80% { transform: translate(2px, 2px); }
}

.glitch {
  position: relative;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  animation: glitch 1s steps(1) infinite;
}

.glitch::before {
  color: var(--color-secondary);
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
  transform: translate(-2px);
}

.glitch::after {
  color: var(--color-accent);
  clip-path: polygon(0 80%, 100% 20%, 100% 100%, 0 100%);
  transform: translate(2px);
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

/* Main content container */
main {
  position: relative;
  height: 100vh;
  overflow-y: auto;
  z-index: 1;
} 